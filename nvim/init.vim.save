lua require('plugins')

if empty(glob('~/.config/nvim/autoload/plug.vim'))
  silent !curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall
endif

call plug#begin('~/.vim/plugged')
  Plug 'dracula/vim', { 'as': 'dracula' }
  Plug 'vim-airline/vim-airline'
  Plug 'vim-airline/vim-airline-themes'
  " Plug 'petertriho/nvim-scrollbar'
  Plug 'numToStr/Comment.nvim'
  " Plug 'nnanozuki/tabby.nvi'
  " Plug 'morhetz/gruvbox'
  " Plug 'ncm2/ncm2'
  " Plug 'SirVer/ultisnips'
  " Plug 'honza/vim-snippets'
  Plug 'tiagovla/scope.nvim'
  Plug 'nvim-tree/nvim-tree.lua'
  Plug 'preservim/nerdtree'
  Plug 'junegunn/fzf'
  Plug 'junegunn/fzf.vim'
  " Plug 'duane9/nvim-rg'
  " Plug 'Shougo/denite.nvim'
  " Plug 'roxma/nvim-yarp'
  Plug 'ntpeters/vim-better-whitespace'
  " auto-close plugin
  Plug 'rstacruz/vim-closer'
  " Improved motion in Vim
  Plug 'easymotion/vim-easymotion'
  Plug 'nvim-tree/nvim-web-devicons'
  " Intellisense Engine
  " Plug 'neoclide/coc.nvim', {'branch': 'release'}

call plug#end()

lua require('Comment').setup()
" Yank and paste with the system clipboard
"set clipboard=unnamed

" Insert spaces when TAB is pressed.
set expandtab

" Change number of spaces that a <Tab> counts for during editing ops
set softtabstop=2

" Indentation amount for < and > commands.
set shiftwidth=2

" === NERDTree === "
let g:NERDTreeShowHidden = 1
let g:NERDTreeMinimalUI = 1
let g:NERDTreeDirArrowExpandable = '⬏'
let g:NERDTreeDirArrowCollapsible = '⬎'
let g:NERDTreeIgnore = ['^\.DS_Store$', '^tags$', '\.git$[[dir]]', '\.idea$[[dir]]', '\.sass-cache$']

try
  let g:airline_powerline_fonts = 1
  " let g:airline_highlighting_cache = 1
  " let g:airline#extensions#tabline#enabled = 1
  " let g:airline#extensions#tabline#left_sep = ' '
  " let g:airline#extensions#tabline#left_alt_sep = '|'
  " let g:airline#extensions#tabline#formatter = 'default'
catch
  echo 'Airline not installed. It should work after running :PlugInstall'
endtry

" function! TrailingSpaceHighlights() abort
"   " Hightlight trailing whitespace
"   highlight Trail ctermbg=red guibg=red
"   call matchadd('Trail', '\s\+$', 100)

" autocmd! ColorScheme * call TrailingSpaceHighlights()
" autocmd! ColorScheme OceanicNext call s:custom_jarvis_colors()
" Automaticaly close nvim if NERDTree is only thing left open
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" === Search === "
" ignore case when searching
set ignorecase

" if the search string has an upper case letter in it, the search will be case sensitive
set smartcase

" Automatically re-read file if a change was detected outside of vim
set autoread

" ===========================================
lua require('init')

let NERDTreeQuitOnOpen=1
" nmap <leader>n :NERDTreeToggle<CR>
" nmap <leader>n :NERDTreeFind<CR>
" nmap <C-h> <C-w>h
" nmap <C-j> <C-w>j
" nmap <C-k> <C-w>k
" nmap <C-l> <C-w>l
nnoremap <C-t> :NERDTreeFind<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
inoremap jk <esc>
" map ; :
" nnoremap : ;
inoremap ; :
inoremap : ;

colorscheme dracula
let g:airline_theme='deus'

" Reload icons after init source
if exists('g:loaded_webdevicons')
  call webdevicons#refresh()
endif

nnoremap <C-Left> :tabprevious<CR>                                                                            
nnoremap <C-Right> :tabnext<CR>
nnoremap <C-j> :tabprevious<CR>                                                                            
nnoremap <C-k> :tabnext<CR>
